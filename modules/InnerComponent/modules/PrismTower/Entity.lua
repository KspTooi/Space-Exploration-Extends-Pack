---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/2/12 21:30
---


local animation = {

    filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower.png"),
    priority = "high",
    width = 250,
    height = 525,
    frame_count = 32,
    line_length = 8,
    run_mode = "forward",
    axially_symmetrical = false,
    direction_count = 4,
    shift = util.by_pixel(0, -88),
    scale = 0.4,
    hr_version =
    {
        filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower.png"),
        priority = "high",
        width = 250,
        height = 525,
        frame_count = 32,
        line_length = 8,
        run_mode = "forward",
        axially_symmetrical = false,
        direction_count = 4,
        shift = util.by_pixel(0, -88),
        scale = 0.4
    }
}


function animationShootingGenerate(inputs)
    return
    {
        layers =
        {
            {
                filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower-shooting.png"),
                priority = "medium",
                scale = 0.2,
                width = 225,
                height = 500,
                direction_count = inputs.direction_count and inputs.direction_count or 1,
                frame_count = 1,
                line_length = inputs.line_length and inputs.line_length or 8,
                axially_symmetrical = false,
                run_mode = inputs.run_mode and inputs.run_mode or "forward",
                shift = { 0, -1 },
                hr_version =
                {
                    filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower-shooting.png"),
                    priority = "medium",
                    scale = 0.2,
                    width = 225,
                    height = 500,
                    direction_count = inputs.direction_count and inputs.direction_count or 1,
                    frame_count = 1,
                    line_length = inputs.line_length and inputs.line_length or 8,
                    axially_symmetrical = false,
                    run_mode = inputs.run_mode and inputs.run_mode or "forward",
                    shift = { 0, -1 },
                }
            }
        }
    }
end

function animationGenerate(inputs)
    return
    {
        layers =
        {
            {
                filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower.png"),
                priority = "medium",
                scale = 0.2,
                width = 225,
                height = 500,
                direction_count = inputs.direction_count and inputs.direction_count or 32,
                frame_count = 1,
                line_length = inputs.line_length and inputs.line_length or 8,
                axially_symmetrical = false,
                run_mode = inputs.run_mode and inputs.run_mode or "forward",
                shift = { 0, -1 },
                hr_version =
                {
                    filename = db.forRes("PrismTower/res/hr-genric-object-gen3-prism-tower.png"),
                    priority = "medium",
                    scale = 0.2,
                    width = 225,
                    height = 500,
                    direction_count = inputs.direction_count and inputs.direction_count or 32,
                    frame_count = 1,
                    line_length = inputs.line_length and inputs.line_length or 8,
                    axially_symmetrical = false,
                    run_mode = inputs.run_mode and inputs.run_mode or "forward",
                    shift = { 0, -1 },
                }
            }
        }
    }
end



local object = aspectService.get(TypeEnum.electricTurret,ItemEnum.laserTurret)


aspectConverter.toElectricTurret(object)
        :setName(db.forName("prism-tower"))

        :setFoldedAnimation(animationGenerate({direction_count = 1,line_length = 32}))
        :setFoldingAnimation(animationGenerate({direction_count = 1,line_length = 32}))
        :setAttackingAnimation(nil)
        :setPreparedAnimation(animationShootingGenerate{})
        :setPreparingAnimation(animationGenerate({direction_count = 1,line_length = 32}))


        :setBasePicture(nil)
        :setRotationSpeed(100)



        :insertInto()


